package views;

import controllers.PhongBanPanelController;
import controllers.MuonTraPanelController;
import services.CoSoVatChatService;
import services.PhongBanService;
import services.StringService;

import javax.swing.JFrame;

import views.CoSoVatChatFrame.XoaCoSoVatChatFrame;
import views.PhongBanFrame.DoiTenPhongBanFrame;
import views.PhongBanFrame.ThemPhongBanFrame;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JTextField;
import java.awt.Rectangle;
import javax.swing.JPanel;
import java.awt.Color;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Component;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.border.LineBorder;
import java.awt.Insets;
import javax.swing.border.CompoundBorder;
import javax.swing.UIManager;
import javax.swing.SwingConstants;
import javax.swing.JPopupMenu;
import javax.swing.JRootPane;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author Hai
 */
public class PhongBanPanel extends javax.swing.JPanel {

    /**
     * Creates new form NhanKhauManagePanel
     */
    private PhongBanPanelController controller = null;
    private JFrame parentJFrame;
    
    public PhongBanPanel(JFrame parentFrame) {
        this.parentJFrame = parentFrame;
        initComponents();
        controller = new PhongBanPanelController(tablePanel, searchJtf, popupMenu);
        

        GroupLayout gl_tablePanel = new GroupLayout(tablePanel);
        gl_tablePanel.setHorizontalGroup(
        	gl_tablePanel.createParallelGroup(Alignment.TRAILING)
        		.addGap(0, 566, Short.MAX_VALUE)
        );
        gl_tablePanel.setVerticalGroup(
        	gl_tablePanel.createParallelGroup(Alignment.TRAILING)
        		.addGap(0, 211, Short.MAX_VALUE)
        );
        tablePanel.setLayout(gl_tablePanel);
        controller.setParentJFrame(parentJFrame);
        controller.setDataTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        tablePanel = new javax.swing.JPanel();
        tablePanel.setAutoscrolls(true);
        
        popupMenu = new JPopupMenu();
        addPopup(tablePanel, popupMenu);
        
        huyPhongBan = new JMenuItem("Hủy phòng ban");
        popupMenu.add(huyPhongBan);
        huyPhongBan.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent evt) {
				// TODO Auto-generated method stub
				huyPhongBanActionPerformed(evt);
			}
		});
        
        doiTenPhongBan = new JMenuItem("Đổi tên phòng ban");
        popupMenu.add(doiTenPhongBan);
        doiTenPhongBan.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent evt) {
				// TODO Auto-generated method stub
				doiTenPhongBanActionPerformed(evt);
			}

		});
        addNewBtn = new javax.swing.JButton();
        addNewBtn.setBorder(null);
        addNewBtn.setIcon(new ImageIcon(PhongBanPanel.class.getResource("/Icons/add.png")));

        setBackground(new java.awt.Color(255, 255, 255));

        addNewBtn.setBackground(new java.awt.Color(255, 255, 255));
        addNewBtn.setFont(new Font("Arial", Font.BOLD, 10));
        addNewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewBtnActionPerformed(evt);
            }
        });
        
        JPanel searchPanel = new JPanel();
        searchPanel.setBorder(UIManager.getBorder("TextField.border"));
        searchPanel.setFont(new Font("Tahoma", Font.PLAIN, 14));
        searchPanel.setBackground(Color.WHITE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(tablePanel, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(searchPanel, GroupLayout.PREFERRED_SIZE, 312, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
        					.addComponent(addNewBtn, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)))
        			.addContainerGap())
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(51)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(addNewBtn, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
        					.addGap(27))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(searchPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addGap(23)))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(tablePanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        searchJtf = new JTextField();
        searchJtf.setBorder(null);
        searchJtf.setColumns(10);
        
        JButton searchJbutton = new JButton("");
        searchJbutton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent evt) {
        		jtfSearchActionPerformed(evt);
        	}
        });
        searchJbutton.setBorder(null);
        searchJbutton.setIcon(new ImageIcon(PhongBanPanel.class.getResource("/Icons/search.png")));
        searchJbutton.setBackground(Color.WHITE);
        GroupLayout gl_searchPanel = new GroupLayout(searchPanel);
        gl_searchPanel.setHorizontalGroup(
        	gl_searchPanel.createParallelGroup(Alignment.TRAILING)
        		.addGroup(gl_searchPanel.createSequentialGroup()
        			.addComponent(searchJtf, GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
        			.addGap(48)
        			.addComponent(searchJbutton, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE))
        );
        gl_searchPanel.setVerticalGroup(
        	gl_searchPanel.createParallelGroup(Alignment.TRAILING)
        		.addGroup(Alignment.LEADING, gl_searchPanel.createParallelGroup(Alignment.BASELINE)
        			.addComponent(searchJtf, GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
        			.addComponent(searchJbutton, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
        );
        searchPanel.setLayout(gl_searchPanel);
        this.setLayout(layout);
    }// </editor-fold>//GEN-END:initComponents

    
    private void addNewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewBtnActionPerformed
    	ThemPhongBanFrame ThemPhongBanFrame = new ThemPhongBanFrame(this.controller, this.parentJFrame);
    	ThemPhongBanFrame.setLocationRelativeTo(null);
    	ThemPhongBanFrame.setResizable(false);
    	ThemPhongBanFrame.setVisible(true);
    }//GEN-LAST:event_addNewBtnActionPerformed

    private void jtfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSearchActionPerformed
    	String tenPhongBan = StringService.covertToString(searchJtf.getText());
    	controller.setData(tenPhongBan);
    }//GEN-LAST:event_jtfSearchActionPerformed

	private static void addPopup(Component component, final JPopupMenu popup) {
		component.addMouseListener(new MouseAdapter() {
			public void mousePressed(MouseEvent e) {
				if (e.isPopupTrigger()) {
					showMenu(e);
				}
			}
			public void mouseReleased(MouseEvent e) {
				if (e.isPopupTrigger()) {
					showMenu(e);
				}
			}
			private void showMenu(MouseEvent e) {
				popup.show(e.getComponent(), e.getX(), e.getY());
			}
		});
	}
	
	private void huyPhongBanActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
		JTable xemChiTietTable = this.controller.getTable();
		int row = xemChiTietTable.getSelectedRow();
		if(row == -1) {
    		JOptionPane.showMessageDialog(null, "Hãy lựa chọn một hàng trước",
  			      "Lỗi không chọn hàng!", JOptionPane.ERROR_MESSAGE);
  		return;
		}
		String tenPhongBan = xemChiTietTable.getModel().getValueAt(row, 1).toString();
        if (JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn hủy phòng " + tenPhongBan + " ??", "Warning!!", JOptionPane.YES_NO_OPTION) == 0) {
        	 try {
             	PhongBanService phongBanService = new PhongBanService();
             	if(phongBanService.huyPhongBan(tenPhongBan))
                     JOptionPane.showMessageDialog(null, "Hủy thành công!!");
                else {
                	if(JOptionPane.showConfirmDialog(null, "Có phòng ban " + tenPhongBan + " có lịch sắp tới sử dụng, ban có muốn hủy ??", "Warning!!", JOptionPane.YES_NO_OPTION) == 0) {
                		if(phongBanService.huyPhongBanBatBuoc(tenPhongBan))
                            JOptionPane.showMessageDialog(null, "Hủy thành công!!");
                	}

                }
                controller.refreshData();
           
             } catch (Exception e) {
                 System.out.println(e.getMessage());
                 JOptionPane.showMessageDialog(null, "Có lỗi xảy ra. Vui long kiểm tra lại!!", "Warning", JOptionPane.WARNING_MESSAGE);
             }
        }
	}
	
	private void doiTenPhongBanActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
		JTable xemChiTietTable = this.controller.getTable();
		int row = xemChiTietTable.getSelectedRow();
		if(row == -1) {
    		JOptionPane.showMessageDialog(null, "Hãy lựa chọn một hàng trước",
  			      "Lỗi không chọn hàng!", JOptionPane.ERROR_MESSAGE);
  		return;
		}
		String tenPhongBan = xemChiTietTable.getModel().getValueAt(row, 1).toString();
		DoiTenPhongBanFrame doiTenPhongBanFrame = new DoiTenPhongBanFrame(this.controller, this.parentJFrame, tenPhongBan);
		doiTenPhongBanFrame.setLocationRelativeTo(null);
		doiTenPhongBanFrame.setResizable(false);
		doiTenPhongBanFrame.setVisible(true);
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewBtn;
    private javax.swing.JPanel tablePanel;
    private JTextField searchJtf;
    private JPopupMenu popupMenu;
    private JMenuItem huyPhongBan;
    private JMenuItem doiTenPhongBan;

}
